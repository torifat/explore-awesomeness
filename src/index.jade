doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Hello World

    link(href='http://fonts.googleapis.com/css?family=Open+Sans:300,600', rel='stylesheet', type='text/css')
    link(href='http://fonts.googleapis.com/css?family=Ubuntu', rel='stylesheet', type='text/css')

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-okaidia.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    // endbuild

  body

    article

      section
        h2 Explore
        h1 Awesomeness

      section.logo.logo--bower(data-bespoke-state='bower')

      section(data-bespoke-state='bower')
        h2 Installation
        pre.language-bash
          code $ npm install -g bower

      section(data-bespoke-state='bower')
        h2 Initialize
        pre.language-bash
          code $ bower init

      section(data-bespoke-state='bower')
        h2 bower.json
        pre.language-javascript
          code.
            {
              "name": "project-name",
              "version": "0.0.1",
              "authors": [
                "Rifat Nabi <to.rifat@gmail.com>"
              ],
              "license": "MIT"
            }

      section(data-bespoke-state='bower')
        h2 Search Package
        pre.language-bash
          code $ bower search jquery

      section(data-bespoke-state='bower')
        h2 Install Package
        pre.language-bash
          code $ bower install --save backbone

      section(data-bespoke-state='bower')
        h2 bower.json
        pre.language-javascript
          code.
            {
              "name": "bower",
              "version": "0.0.0",
              "authors": [
                "Rifat Nabi <to.rifat@gmail.com>"
              ],
              "license": "MIT",
              "dependencies": {
                "backbone": "~1.1.2"
              }
            }

      section.logo.logo--jshint(data-bespoke-state='white')

      section(data-bespoke-state='jshint')
        h2 Installation
        pre.language-bash
          code $ npm install -g jshint

      section(data-bespoke-state='smile')
        h1.shadow DEMO

      section
        h2.bullet Build Tools
        ul
          li Make
          li Rake
          li Cake
          li Jake
          li Bake

      section
        h2.bullet Mother of all Build Tools
        pre.language-javascript.bullet
          code /[\w]+ake/g

      section.logo.logo--gulp(data-bespoke-state='white')

      section(data-bespoke-state='gulp')
        img.rocket(src='images/rocket.png')
        h2 Speed ~ Efficiency ~ Simplicity

      section(data-bespoke-state='stream')
        h2.alt.shadow Stream

      section.logo.logo--grunt-flow(data-bespoke-state='white')

      section.logo.logo--gulp-flow(data-bespoke-state='white')

      section(data-bespoke-state='gulp')
        h2 Installation
        pre.language-bash
          code $ npm install -g gulp

      section(data-bespoke-state='gulp')
        h2 Create a gulpfile
        pre.language-bash
          code $ touch gulpfile.js

      section(data-bespoke-state='gulp')
        h2.bullet Simple API
        ul
          li gulp.task
          li gulp.src
          li gulp.dest
          li gulp.watch

      section(data-bespoke-state='gulp')
        h2 gulp.task
        pre.language-javascript
          code.
            gulp.task('name', ['dependencies'], function(next) {

              return stream || promise;
              // ...or, call next()

            });

      section(data-bespoke-state='gulp')
        h2 gulp.src
        h3 It returns a Stream
        pre.language-javascript
          code.
            gulp.src(['app/**/*.js', 'app/**/*.css'])

      section(data-bespoke-state='gulp')
        h2 gulp.dest
        pre.language-javascript
          code.
            gulp.src('src')
                .pipe(...)
                .pipe(gulp.dest('dist'));

      section(data-bespoke-state='gulp')
        h2 gulp.watch
        pre.language-javascript
          code.
            gulp.watch(['src'], ['task1', 'task2']);

      section(data-bespoke-state='dance')
        h1.shadow DEMO

      section(data-bespoke-state='cry')
        h2.shadow Nothing for PHP?

      section(data-bespoke-state='gulp')
        h2 PHPUnit
        pre.language-javascript
          code.
            var gulp = require('gulp'),
                phpunit = require('gulp-phpunit');

            gulp.task('phpunit', function() {
              gulp.src('app/tests/*.php')
              .pipe(phpunit());
            });

            gulp.task('watch', function () {
              gulp.watch('app/tests/**/*.php', ['phpunit']);
            });

      section(data-bespoke-state='excited')
        h1.shadow DEMO

      section
        h1 Thank You
        h3
          a(href='https://twitter.com/rifat') @rifat
        img.avatar.avatar--small(src='images/profile.jpg')

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
